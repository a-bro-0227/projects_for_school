{
    "collab_server" : "",
    "contents" : "rm(list = ls())\n### ISU - Data Visualization Class Notes\n\n#====Lecture 6 Notes====\nx <- c(4, 1, 3, 9)\ny <- c(1, 2, 3, 5)\nd <- sqrt(sum((x - y)^2))\n\nz <- c(1,2,3,2,1,2,2,3,2,2,2,1,1,3,2,1)\nlabels <- c('low', 'medium', 'high')\nlabels[z]\n\ntips <- read.csv(\"http://www.ggobi.org/book/data/tips.csv\", stringsAsFactors = F)\nhead(tips)\ntail(tips)\ndim(tips)\nnames(tips)\nsummary(tips)\nstr(tips)\ntips$totbill\nsummary(tips$totbill)\nsummary(tips[, \"totbill\"])\ntips[1:5,]\ntips[1:5, 2:3]\n\n#====Lecture 7 Notes====\nlibrary(ggplot2)\n\ntips <- read.csv(\"http://www.ggobi.org/book/data/tips.csv\", stringsAsFactors = F)\n\nggplot(data = tips, aes(x = totbill, y = tip)) +\n  geom_point() +\n  geom_smooth(method = 'lm')\n\ntips.lm <- lm(tip ~ totbill, data = tips)\nsummary(tips.lm)\n\nggplot(data = tips, aes(x = totbill, y = tip)) +\n  geom_point() +\n  geom_smooth(method = 'lm') +\n  #adds an additional line/slope to compare\n  #the 'suggested' tip of 15%\n  geom_abline(intercept = 0, slope = .15)\n\n#investigating the 'horizontal' lines found in the\n#data points which indicate people like to tip\n#whole dollar amounts\nggplot(data = tips, aes(x = tip)) +\n  geom_histogram(binwidth = 1)\n\n#bin set = 0.1\nggplot(data = tips, aes(x = tip)) +\n  geom_histogram(binwidth = .1)\n\ntips$tiprate <- tips$tip / tips$totbill\nhead(tips)\nsummary(tips$tiprate)\n\n#histogram of tiprate\nggplot(data = tips, aes(x = tiprate)) +\n  geom_histogram()\n#does tiprate decrease when total bill goes up\nggplot(data = tips, aes(x = totbill, y = tiprate)) +\n  geom_point()\n\n#investigate by sex\nggplot(data = tips, aes(x = sex, y = tiprate)) + geom_point()\n#jittering spreads out points in x direction - spread does not\n#mean anything, but gets rid of over plotting\nggplot(data = tips, aes(x = sex, y = tiprate)) + geom_jitter()\nggplot(data = tips, aes(x = sex, y = tiprate)) + geom_boxplot()\n#gender to color\nggplot(data = tips, aes(x = totbill, y = tip)) +\n  geom_point(aes(colour = sex))\n#faceting by sex\nggplot(data = tips, aes(x = totbill, y = tip)) +\n  geom_point(aes(colour = sex)) +\n  facet_wrap(~ sex) +\n  #adding lines to both facets\n  geom_smooth(method = 'lm')\n#this way also changes the color of the regression lines\nggplot(data = tips, aes(x = totbill, y = tip, colour = sex)) +\n  geom_point() +\n  facet_wrap(~ sex) +\n  #adding lines to both facets\n  geom_smooth(method = 'lm')\n\n#try it section\n\n#create plots to investigate relationship between tip rate and smoking\nggplot(data = tips, aes(x = smoker, y = tiprate)) + geom_boxplot()\nggplot(data = tips, aes(x = smoker, y = tiprate)) + geom_jitter()\n#smoker to color\nggplot(data = tips, aes(x = totbill, y = tip)) +\n  geom_point(aes(colour = smoker))\n#faceting by smoker\nggplot(data = tips, aes(x = totbill, y = tip)) +\n  geom_point(aes(colour = smoker)) +\n  facet_wrap(~ smoker) +\n  #adding lines to both facets\n  geom_smooth(method = 'lm')\n#this way also changes the color of the regression lines\nggplot(data = tips, aes(x = totbill, y = tip, colour = smoker)) +\n  geom_point() +\n  facet_wrap(~ smoker) +\n  #adding lines to both facets\n  geom_smooth(method = 'lm')\nsmoker.lm <- lm(tiprate ~ smoker, data = tips)\nsmoker.lm\n\n#creat plots to investigate whether there is a particularly good day\n#of the week for a waiter to volunteer\nggplot(data = tips, aes(x = day, y = tip)) +\n  geom_boxplot()\nggplot(data = tips, aes(x = day, y = tiprate)) +\n  geom_boxplot()\nggplot(data = tips, aes(x = day)) +\n  geom_bar()\n#this way also changes the color of the regression lines\nggplot(data = tips, aes(x = totbill, y = tip, colour = day)) +\n  geom_point() +\n  facet_wrap(~ day) +\n  #adding lines to both facets\n  geom_smooth(method = 'lm') +\n  #adds an additional line/slope to compare\n  #the 'suggested' tip of 15%\n  geom_abline(intercept = 0, slope = .15)\nday.lm <- lm(tiprate ~ day, data = tips)\nday.lm\nday.lm2 <- lm(tip ~ day, data = tips)\nday.lm2\n\n#create a plot that is facetted by smoking and gender\nggplot(data = tips, aes(x = totbill, y = tip)) +\n  geom_point() +\n  facet_grid(sex ~ smoker)\n\n#shape and color are both pre-attenative, but not together\nggplot(data = tips, aes(x = totbill, y = tip)) +\n  geom_point(aes(colour = sex, shape = smoker))\nggplot(data = tips, aes(x = totbill, y = tip)) +\n  geom_point(aes(colour = interaction(sex, smoker)))\n\n\n#====Lecture 8 Notes====\ndevtools::install_github(\"njtierney/visdat\")\nlibrary(visdat)\n\nhappy <- read.csv(\"F:/School/ISU/Visual Business Analytics/Data and Markdown files/Related Materials week 07/happy.csv\")\nvis_miss(happy)\n\n#Look at the statements below and describe in words what they are calculating:\nrowSums(is.na(happy))\nhappy[complete.cases(happy),]\nidentical(is.na(happy$happy), !complete.cases(happy$happy))\nggplot(data = na.omit(happy), aes(x = age, fill = happy)) + geom_bar()\n#Determine the average age of participants in the survey\n\n\nstr(happy)\nis.factor(happy$region)\nis.numeric(happy$region)\nlevels(happy$region)\nhappy$income\nhappy$marital\n\ntable(happy$income) #ordered aphabetically\n#need to re-code so they are in correct order\nhappy$income <- factor(happy$income,\n                       levels = c(\"LT $1000\", \"$1000 TO 2999\",\n                                  \"$3000 TO 3999\", \"$4000 TO 4999\",\n                                  \"$5000 TO 5999\", \"$6000 TO 6999\",\n                                  \"$7000 TO 7999\", \"$8000 TO 9999\",\n                                  \"$10000 - 14999\", \"$15000 - 19999\",\n                                  \"$20000 - 24999\", \"$25000 OR MORE\"))\n\nlibrary(ggplot2)\nggplot(data = happy, aes(x = income)) + geom_bar()\nggplot(data = happy, aes(x = income)) + geom_bar() +\n  coord_flip() #puts income on horizontal level\n\n#marital status\nggplot(data = happy, aes(x = marital)) + geom_bar() +\n  coord_flip() #puts income on horizontal level\n\nggplot(data = happy, aes(x = marital, y = age)) + geom_boxplot() +\n  coord_flip() #puts income on horizontal level\n\n#reorder martital status by median\nhappy$marital <- reorder(happy$marital, happy$age, FUN = median, na.rm = T)\n\nggplot(data = happy, aes(x = marital, y = age)) + geom_boxplot() +\n  coord_flip() #puts income on horizontal level\n\n\n#try it section\n\n# The variable finrela is a factor variable describing a participantâ€™s\n# perceived financial situation compared to the US average.\n# Get the categories in the right order from lowest to highest.\nhead(happy)\nlevels(happy$finrela)\nhappy$finrela <- factor(happy$finrela, levels = c(\"FAR BELOW AVERAGE\", \"BELOW AVERAGE\",\n                                                  \"AVERAGE\", \"ABOVE AVERAGE\", \"FAR ABOVE AVERAGE\"))\nlevels(happy$finrela)\n\nggplot(data = happy, aes(x = finrela)) + geom_bar()\n\n# The variable degree is the highest educational degree the\n# participant has. Does ordering the categories by their median age\n# bring them into an order from lowest educational degree to highest?\n# Check with side-by-side boxplots of age by degree.\n#reorder martital status by median\nlevels(happy$degree)\nhappy$degree <- reorder(happy$degree, happy$age, FUN = median, na.rm = T)\n\nggplot(data = happy, aes(x = degree, y = age)) + geom_boxplot() +\n  coord_flip() #puts income on horizontal level\n\n#add year\nggplot(data = happy, aes(x = year, fill = degree)) + geom_bar(position = 'fill')\n\nhappy$year <- factor(happy$year)\nstr(happy)\nggplot(data = happy, aes(x = year, fill = degree)) + geom_bar(position = 'fill')\n\n\n\nmymean <- function(x, na.rm = F) {\n  x <- as.numeric(x)\n  if(na.rm == T) x <- na.omit(x)\n  result <- sum(x)/length(x)\n  \n  return(result)\n}\n\n\nmymean(1:5)\nmymean(c('one', 'two'))\nmymean(c(1:5, NA))\nmymean(c(1:5, NA), na.rm = T)\n\n\nmysd <- function(x, na.rm = F) {\n  x <- as.numeric(x)\n  if(na.rm == T) {x <- na.omit(x)}\n  \n  n <- length(x)\n  xbar <- mean(x)\n  \n  sdsq <- sum((x - xbar)^2) / (n - 1)\n  \n  sqrt(sdsq)\n}\n\n\nsd(1:5)\nmysd(1:5)\nmysd(c('one', 'two'))\nmysd(c(1:5, NA))\nmysd(c(1:5, NA), na.rm = T)\n\ninwords <- function(x) {\n  hund <- x %/% 100\n  \n  tens <- x %/% 10\n  digi <- x %% 10\n  \n  \n}\n\n#====Lecture 9 Notes====\n\nlibrary(readr)\nhappy <- read_csv(\"F:/School/ISU/Visual Business Analytics/Data and Markdown files/Related Materials week 07/happy.csv\")\nhappy\n\nlibrary(dplyr)\nfilter(happy, sex == \"FEMALE\")\narrange(filter(happy, sex == \"FEMALE\"), degree)\narrange(filter(happy, sex == \"FEMALE\"), degree, age)\narrange(filter(happy, sex == \"FEMALE\"), degree, desc(age))\nselect(happy, partyid, polviews, age)\nmutate(happy, agedecade = cut(age, breaks = c(18, 25, 35, 45, 55, 65, 75, 89)))\n\nsummarise(group_by(happy, sex, marital),\n          n = n(),\n          meanage = mean(age, na.rm = T),\n          sdage = sd(age, na.rm = T),\n          missing = sum(is.na(age)))\n\nlibrary(ggplot2)\n\nhdata <- happy\n\nhdata %>% filter(!is.na(happy)) %>%\nggplot(aes(x = factor(year), fill = happy)) + geom_bar(position = 'fill')\n\nhdata %>% filter(!is.na(happy)) %>%\n  group_by(year, sex) %>%\n  summarise(perchappy = sum(happy == \"NOT TOO HAPPY\")/n()*100,\n            n = n()) %>%\n  ggplot(aes(x = year, y = perchappy, colour = sex)) + geom_point() + geom_smooth()\n\n\nhdata %>% filter(!is.na(happy)) %>%\n  ggplot(aes(x = factor(year), fill = happy)) + geom_bar(position = 'fill')\n\nhdata %>% filter(!is.na(happy), happy != \"DK\", happy != \"IAP\") %>%\n  group_by(year, sex) %>%\n  mutate(total = n()) %>%\n  group_by(year, sex, happy) %>%\n  summarise(perc = n()/mean(total)*100) %>%\n  ggplot(aes(x = year, y = perc, colour = happy, shape = sex)) + geom_point() + geom_smooth(aes(group = happy))\n\n#how is happiness affected by ...\n# gender\n# age\n# money\n\nhdata %>% filter(!is.na(happy), happy != \"DK\", happy != \"IAP\") %>%\n  ggplot(aes(x = age, fill = happy)) + geom_bar(position = \"fill\") +\n  facet_grid(sex ~ .)\n\n\nhdata %>% filter(!is.na(happy), happy != \"DK\", happy != \"IAP\") %>%\n  ggplot(aes(x = finrela, fill = happy)) + geom_bar(position = \"fill\") +\n  coord_flip()\n\nread.csv(\"fbi-crimes.csv\")\n\n#====Lecture 10 Notes====\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(RColorBrewer)\n\nstates <- map_data(\"state\")\n\nstates %>% ggplot(aes(x = long, y = lat)) + geom_point()\n?map_data\ndim(states)\nhead(states)\nstates %>%\n  ggplot(aes(x = long, y = lat)) +\n  geom_path(aes(group = group)) +    #for boarders\n  geom_polygon(aes(group = group,    #for fill\n                   fill = lat)) +    #what to fill\n  ggthemes::theme_map()\n\n#try it\ncounties <- map_data(\"county\")\ncounties %>%\n  ggplot(aes(x = long, y = lat)) +\n  geom_path(aes(group = group)) +    #for boarders\n  geom_polygon(aes(group = group,    #for fill\n                   fill = subregion == \"story\")) +    #what to fill\n  ggthemes::theme_map()\n\nlibrary(ggwordcloud)\ncounties %>% count(subregion) %>%\n  ggplot(aes(label = subregion, size = n)) + geom_text_wordcloud() + theme_minimal()\n\n\nfbi <- read.csv(\"F:/School/ISU/Visual Business Analytics/Data and Markdown files/Related Materials week 09/fbi-crimes.csv\", stringsAsFactors = F)\n\nfbimap <- states %>%\n  inner_join(y = fbi %>%\n               filter(Year == 2015) %>%\n               mutate(State = tolower(State)),\n             by = c(\"region\" = \"State\")) %>%\n  arrange(order)\n\nfbimap %>%\n  ggplot(aes(x = long, y = lat, group = group)) +\n  geom_polygon(aes(fill = Vehicle.Theft/Population * 60000), colour = \"grey50\") +\n  scale_fill_gradient2(midpoint = median(fbimap$Vehicle.Theft/fbimap$Population * 60000)) +\n  ggthemes::theme_map()\n\n\n#====Lecture 12 Notes====\n\nlibrary(xml2)\nlibrary(rvest)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(RColorBrewer)\n\nurl <- \"http://www.realclearpolitics.com/epolls/2016/president/us/general_election_trump_vs_clinton-5491.html\"\ndoc <- read_html(url)\ntables <- html_table(doc)\nstr(tables)\n\n# Relevant information is in table # 4\n# now we need to clean the data\nraw <- tables[[4]]\nhead(raw)\n\nclean01 <- raw %>% separate(Date, into = c(\"Start_Date\", \"End_Date\"), sep = \" - \")\n\nclean02 <- clean01 %>%\n  mutate(Start_Date = ymd(paste(\"2016\", Start_Date, sep = \"/\")),\n         End_Date = ymd(paste(\"2016\", End_Date, sep = \"/\")))\n\npolls <- clean02 %>%\n  separate(Sample, into = c(\"Number\", \"Type\"), fill = \"left\") %>%\n  filter(Poll != \"Final Results\" & Poll != \"RCP Average\") %>%\n  rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%\n  add_count(Poll) %>%\n  mutate(Number = as.numeric(Number),\n         pollster = ifelse(n <=5, \"Other\",\n                           sapply(Poll, function(x) gsub(paste0(\"^(.*?\",\n                                                                substr(x, 1, 3),\".*?)\",\n                                                                substr(x, 1, 3), \".*\"),\n                                                         \"\\\\1\", x)))) #%>% select(-n)\n\nlevels(as.factor(polls$pollster))\n\nhead(polls)\n\nimportant_dates <- data.frame(date = ymd(c(\"2016-11-09\", \"2016-09-26\", \"2016-10-09\", \"2016-10-19\",\n                                           \"2016-07-15\", \"2016-07-25\", \"2016-07-18\", \"2016-07-28\")),\n                              type = c(\"Election Day\", \"1st Debate\", \"2nd Debate\", \"3rd Debate\",\n                                      \"RNC Start\", \"DNC Start\", \"RNC End\", \"DNC End\"))\n\nk <- length(levels(as.factor(polls$pollster)))\nbrewer.pal(n = k-1, name = \"Paired\")\n\np <- polls %>%\n  ggplot(aes(x = End_Date, y = Clinton - Trump, colour = pollster)) +\n  annotate(\"text\", x = min(polls$Start_Date), y = 10, label = \"Clinton\",\n           size = 20, colour = \"grey90\", hjust = 0) +\n  annotate(\"text\", x = min(polls$Start_Date), y = -10, label = \"Trump\",\n           size = 20, colour = \"grey90\", hjust = 0) +\n  geom_point() +\n  geom_smooth(colour = \"grey50\", se = F) +\n  geom_hline(yintercept = 0, colour = \"grey80\") +\n  geom_vline(aes(xintercept = as.numeric(date)), colour = \"grey80\", data = important_dates) +\n  geom_segment(aes(x = Start_Date, xend = End_Date, yend = Clinton - Trump)) +\n  xlab(\"Date\") +\n  ylab(\"Percentage Point Diff\") +\n  theme(legend.position = \"bottom\") +\n  theme_bw() +\n  ylim(c(-15, 15))\n\np + ggrepel::geom_label_repel(aes(x = date, label = type), colour = \"grey90\", y = -13, data = important_dates)\n\nlibrary(plotly)\nggplotly(p)\n\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nfars <- src_sqlite(\"F:/School/ISU/Visual Business Analytics/Data and Markdown files/Related Materials week 12/fars2014\")\nfars\n\naccidents <- tbl(fars, \"accidents\")\naccidents %>% filter(between(LONGITUD, -130, 0))\n\naccidents %>%\n  filter(between(LONGITUD, -130, 0)) %>%\n  collect() %>%\n  ggplot(aes(LONGITUD, LATITUDE)) +\n  geom_point(alpha = 0.5, size = 0.5)\n\nacc.summ <- accidents %>% group_by(DAY_WEEK, HOUR, DRUNK_DR) %>% summarize(COUNT_ACCIDENTS = n()) %>% collect()\nacc.summ <- acc.summ %>% mutate(ALCOHOL = DRUNK_DR > 0) %>% filter(HOUR <= 24)\n\nacc.summ %>%\n  ggplot(aes(x = HOUR, y = COUNT_ACCIDENTS, colour = ALCOHOL)) +\n  geom_point() +\n  facet_wrap( ~ DAY_WEEK)\n\n#====Quizzes====\n#quiz 5\ny <- matrix(data = c(1, 1, 5, 3, 4, 2), nrow = 3, ncol = 2)\ny\n\nf1<- function(x, y)  c(x ^2 , x+y) \nf2 <- function(x, y)  c(x+2 , y+5)\n\nf1(1,2)*f2(2,3)\n\ny <- matrix(data = c(2, 1, 3, 2, 4, 3), nrow = 3, ncol = 2)\ny\napply(X =y, MARGIN = 2, FUN = sd)\n\ny <- matrix(data = c(8, 2, 2 , 4 ,1, 4, 3, 1, 4, 2), nrow = 5, ncol = 2)\ny\napply(X =y, MARGIN = 2, FUN = sum)\n\ndim(y)[2]\n\n#quiz 6\ny <- c(4, 3, 2, 4, 5, 6, 2, 4 , 8)\ny==c(4, 2, 4, 2, 4, 2, 4, 2, 4)\n\n\nggplot(data = tips, aes(x = totbill, y = tip, color = sex) ) + geom_point()+ \n  ylab(\"Tips in US dollars\") + xlab(\"Total bill in US dollars\")\nggplot(data = tips, aes(x = time, y = totbill)  ) + geom_boxplot() +\n  xlab(\"\") + ylab(\"Total bill in US dollars\")\n\n\nggplot(data = tips, aes(x = totbill)  ) + geom_histogram() +\n  xlab(\"Total bill in US dollars\") + facet_wrap(~time)\n\ny <- c(2, 4, 5, 6, 5, 6, 8, 9, 10)\ny[y!=6]\n\ny <- c(1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1)\nx <- y==0\ntable(x)\nlength(x)\nlength(y)\n\n\nggplot(data = tips, aes(x = time, y = totbill)  ) + geom_boxplot()  +\n  xlab(\"\") + ylab(\"Total bill in US dollars\") + facet_grid(smoker ~ sex)\n\n\nhappy$happy <- factor(happy$happy, levels = c(\"pretty happy\", \"very   happy\",\"not too happy\"))\nggplot(data = na.omit(happy), aes (x = happy)) +geom_bar()\n\n\nfs <- function(x, y, na.rm = TRUE) {\n  if (na.rm == TRUE) {\n    x <- na.omit(x)\n    y <- na.omit(y)\n  }\n  if (length(x) == length(y)) {\n    sumv <- x+y\n  }else{\n    print(\"x and y have different length\")\n  }\n}\nfs(c(1, 4, 6, 5), c(2, 6, 5, 3))\nfs(1:3,1:5)\n\n\n\n\nhappy <- read.csv(\"F:/School/ISU/Visual Business Analytics/Data and Markdown files/Related Materials week 07/happy.csv\")\nggplot(data = na.omit(happy), aes (x = age, fill =happy)) + geom_bar(position = \"fill\") + facet_wrap( ~sex)\nggplot(data = na.omit(happy), aes (x = age, fill = happy)) +geom_bar()   +       facet_wrap( ~sex)\nggplot(data = happy, aes (x = age, fill =happy)) + geom_bar() +   facet_wrap( ~  sex)\nggplot(data = happy, aes (x = age, fill =happy)) + geom_histogram() +     facet_wrap( ~sex)\n\n\n\n\nsfun1 <- function(x) {\n  c(mean(x), median(x), sd(x), mad(x), IQR(x))\n}\n\nsfun2 <- function(x) {\n  c(mean(x, na.rm = TRUE),\n    median(x, na.rm = TRUE),\n    sd(x, na.rm = TRUE),\n    mad(x, na.rm = TRUE),\n    IQR(x, na.rm = TRUE))\n}\n\nsfun1(1:3); sfun2(c(NA,1,NA,3,NA,2))\nsfun1(rep(2,3))\nsfun2(c(2,3))\nsfun1(1:5)[3]\nmedian(1:5)\n\n\n\nfs <- function(x, y, na.rm = TRUE) {\n  if (na.rm == TRUE) {\n    x <- na.omit(x)\n    y <- na.omit(y)\n  }\n  if (length(x) == length(y)) {\n    sumv <- x+y\n  }else{\n    print(\"x and y have different length\")\n  }\n}\nfs(c(1, \"A\", 2), c(1, 2, 3)); c(2, \"A +2\",  5 )\nfs(c(1, 4, 6, 5), c(2, 6, 5, 3))\nfs(1:3,1:5)\nfs(1:3, 1:3); fs(1:3, c(1, 2, NA, 3))\nf2 <- function(val, y){\n  if(length(val)!=1) stop(\"val should be a number\")\n  if (val > 0) {\n    log(y)\n  } else {\n    (y ^ val)/length(y)\n  }\n  \n}\nf2(1:3, 1:3)\nf2(0,1:3)\nf2(10, c(9, 9, 5))\nhappy$happy <- factor(happy$happy, levels = c(\"pretty happy\", \"very   happy\",\"not too happy\"))\nggplot(data = na.omit(happy), aes (x = happy)) +geom_bar()\n\n\n\n\niris.dat <- iris %>% \n  mutate(ids = 1:n() ) %>% \n  data.frame()\n\n\niris.gather <- iris.dat %>% \n  gather(variable, value, -Species, -ids) \n\n\n\nx <- iris.gather %>%  \n  spread(variable,value)\n\n\nggplot( data = mpg,  aes(displ, hwy) ) +  geom_point(  ) + labs(title=\"Engine displacement vs Highway\") + theme_bw( ) + theme( axis.text.x  = element_text(angle = 45, size = 15, vjust = 0.5),  axis.text.y  = element_text(size = 15, vjust = 0.5), plot.title = element_text(face = \"bold\", size = 12) )\nmpg %>% \n  group_by(manufacturer) %>% \n  summarise(n = n( ) )\n\nmpg %>% \n  filter(manufacturer %in% c(\"audi\", \"ford\" ) )  %>% \n  ggplot( aes(displ, hwy, color = manufacturer)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n\n\n\niris %>% \n  gather(Var.length, length, -starts_with(\"S\") )\nx <- iris %>% \n  gather(Var.length, length, contains( \".\" ) )\n\n\nmpg %>% \n  select(starts_with(\"c\") )\n\n\nggplot(data = mpg, aes(x = cty, y = hwy,  colour = factor(cyl) ) ) + labs(color = \"cly\") + geom_point( ) + scale_colour_manual(values = c(\"red\", \"blue\", \"green\", \"black\") )\n\n\nmpg %>% \n  ggplot( aes(displ, hwy, color = factor(year) ) ) +  geom_point( ) +\n  labs(x = \"Engine displacement, in litres\", y =  \"Highway mileage/gallon\",      colour =  \"Year\", title = \"Engine displacement vs Highway\")\n\nmpg %>% \n  group_by(manufacturer) %>% \n  summarise(n = n( ) )\n\n\nggplot( data = mpg,  aes(displ, hwy) ) +  geom_point(  ) + labs(title=\"Engine displacement vs Highway\") + theme_bw( ) + theme( axis.text.x  = element_text(angle = 45, size = 15, vjust = 0.5),  axis.text.y  = element_text(size = 15, vjust = 0.5), plot.title = element_text(face = \"bold\", size = 12) )\n\nlibrary(ggmap)\nuy <- get_map(location = \"Uruguay\",zoom = 6) +\nggmap(uy,extent = \"device\")\n\n\n\nuy <- get_map(location = \"Uruguay\",zoom = 7)\nggmap(uy, extent = \"normal\")\n\nlibrary(lubridate)\nmdy('01012016') + days(0:365)\n\ncollisions <- read.csv(\"https://data.cityofnewyork.us/api/views/h9gi-nx95/rows.csv\")\n\ncollisions <- collisions %>% filter(!is.na(LATITUDE), !is.na(LONGITUDE))\n\nmap <- get_map(\"new york, ny\", zoom = 11)\n\nreduced <- collisions %>% filter(VEHICLE.TYPE.CODE.2%in%c(\"MOTORCYCLE\", \"BICYCLE\" ))\n\nwday(mdy('12242016'), label = TRUE, abbr = FALSE)\n\n\n\n\ncounty <- map_data(\"county\")\ncounty %>% ggplot(aes(x = long, y = lat, group = group)) + geom_polygon(aes(fill=subregion==\"jefferson\")) + labs(fill = \"Jefferson\") + scale_fill_brewer(palette = \"Dark2\")\n\n\n\neconomics %>% \n  mutate(Quarter = quarter(date), Year = year(date) ) %>% \n  filter(Year!=2015) %>%\n  group_by( Year, Quarter) %>% \n  summarise(PCE = sum(pce)) %>% \n  ggplot(aes(x = Year, y = PCE)) + geom_line()\n\n\neconomics %>% \n  mutate(Month = month(date), Year = year(date) ) %>% \n  filter(Month == 12) %>%\n  ggplot(aes(x = Year, y = unemploy)) + geom_line()\n\n\ndata(ChickWeight)\nChickWeight %>% filter(Diet == 3 & weight == max(weight))\n\nChickWeight %>% count(Chick) %>% filter(n == min(n))\n\nChickWeight %>% filter(Diet == 1) %>% summarize(mean(weight))\n\nChickWeight %>% filter(Diet == 3 & Time == 21) %>% summarize(mean(weight))\nChickWeight %>% filter(weight > 300)\nChickWeight %>% filter(Time == 10) %>% summarize(min(weight))\nmin(ChickWeight$weight)\n\n\n\n",
    "created" : 1539573883187.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "3|20|24|0|\n25|20|143|0|\n144|20|270|0|\n271|20|330|0|\n331|21|379|0|\n",
    "hash" : "1062675213",
    "id" : "A2913121",
    "lastKnownWriteTime" : 1543374600,
    "last_content_update" : 1543374600367,
    "path" : "~/GitHub/projects_for_school/VizAnal_stat528/classNotes.R",
    "project_path" : "classNotes.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}