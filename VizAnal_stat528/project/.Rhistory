theme(plot.title = element_text(face="bold"))
dallas_animals %>%
filter(!is.na(outcome_date)) %>%
count(outcome_date) %>%
ggplot(aes(x = outcome_date, y = n)) +
geom_line() +
geom_smooth(method = 'loess') +
ggtitle("Outcome Time Series") +
xlab("Outcome Date") +
ylab("Number of Animals") +
theme_bw() +
theme(plot.title = element_text(face="bold"))
holidays <- read.csv("usholidays.csv", stringsAsFactors = F)
holidays <- holidays %>% select(Date, Holiday) %>% mutate(Date = ymd(Date)) %>%
inner_join(dallas_animals %>%
select(outcome_date) %>%
mutate(outcome_date = ymd(outcome_date)),
by = c("Date" = "outcome_date")) %>%
distinct()
dallas_animals <-   dallas_animals %>%
mutate(outcome_date = ymd(outcome_date)) %>%
left_join(holidays,
by = c("outcome_date" = "Date"))
dallas_animals %>%
filter(!is.na(outcome_date) & outcome_type == "ADOPTION") %>%
count(outcome_date) %>%
ggplot(aes(x = outcome_date, y = n)) +
geom_line() +
geom_smooth(method = 'loess') +
ggtitle("Adoptoin on Holidays") +
xlab("Outcome Date") +
ylab("Number of Animals") +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
geom_vline(aes(xintercept = as.POSIXct(Date)), colour = "magenta1", data = holidays) +
ggrepel::geom_label_repel(aes(x = as.POSIXct(Date), label = Holiday),
colour = "grey37", y = 150, data = holidays)
dallas_animals %>%
filter(!is.na(outcome_date) & outcome_type == "ADOPTION") %>%
count(outcome_date) %>%
ggplot(aes(x = outcome_date, y = n)) +
geom_line() +
geom_smooth(method = 'loess') +
ggtitle("Adoptoin on Holidays") +
xlab("Outcome Date") +
ylab("Number of Animals") +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
geom_vline(aes(xintercept = as.Date(Date)), colour = "magenta1", data = holidays) +
ggrepel::geom_label_repel(aes(x = as.Date(Date), label = Holiday),
colour = "grey37", y = 150, data = holidays)
knitr::opts_chunk$set(echo = FALSE)
#====library bank====
library(readxl)
library(scales, warn.conflicts = F)
library(lubridate,warn.conflicts = F)
library(rvest, warn.conflicts = F, quietly = T)
library(RColorBrewer)
suppressPackageStartupMessages(library(tidyverse,
warn.conflicts = F))
o_dallas_animals <- read_excel("week18_dallas_animals.xlsx", sheet = "raw", na = "NA")
dallas_animals <- o_dallas_animals %>%
select(-c(kennel_status, tag_type, activity_number, activity_sequence, source_id,
census_tract, receipt_number, impound_number, service_request_number,
chip_status, year)) %>%
rename(year = mo_year) %>%
mutate(intake_day = wday(intake_date, label = TRUE),
outcome_day = wday(outcome_date, label = TRUE),
total_time = difftime(outcome_date, intake_date, units = "days"))
dog_breed <- dallas_animals %>%
filter(animal_type == "DOG") %>%
count(animal_breed) %>%
rename(count_dogs = n) %>%
arrange(desc(count_dogs)) %>%
mutate(percent_dogs = round(count_dogs/sum(count_dogs), 2),
cum_percent = cumsum(percent_dogs),
new_breed = ifelse(cum_percent > 0.8, "OTHER", animal_breed))
dallas_animals <- dallas_animals %>%
left_join(dog_breed %>%
select(animal_breed, new_breed),
by = "animal_breed")
data.frame(numb_rows = nrow(dallas_animals), numb_col = ncol(dallas_animals))
colnames(dallas_animals)
dallas_animals %>%
count(intake_date) %>%
ggplot(aes(x = intake_date, y = n)) +
geom_line() +
geom_smooth(method = 'loess') +
ggtitle("Intake Time Series") +
xlab("Intake Date") +
ylab("Number of Animals") +
theme_bw() +
theme(plot.title = element_text(face="bold"))
dallas_animals %>% count(intake_type) %>%   #count the number of animals
ggplot(aes(x = reorder(intake_type, n), y = n)) +
geom_bar(stat = "identity") +             #create a bar graph
geom_text(aes(label = comma(n)),          #add labels to the graph with a 1,000's comma
position = position_dodge(0.9),
vjust = 0.1,
hjust = -0.2) +
ggtitle("Intake Types") +
xlab("Intake Type") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma, limits = c(0, 25000)) +
theme(plot.title = element_text(face="bold")) +
theme_bw() +
coord_flip()
dallas_animals %>% filter(intake_type == "STRAY" | intake_type == "OWNER SURRENDER") %>%
ggplot(aes(x = intake_day, fill = intake_type)) +
geom_bar() +
facet_wrap( ~ intake_type) +
ggtitle("Intake Type by Day") +
xlab("Intake Day") +
ylab("Number of Animals") +
labs(fill = "Intake Type") +
scale_y_continuous(labels = comma) +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
scale_fill_brewer(palette="Set1")
dallas_animals %>% count(animal_type) %>%   #count the number of animals
ggplot(aes(x = animal_type, y = n)) +
geom_bar(stat = "identity") +             #create a bar graph
geom_text(aes(label = comma(n)),          #add labels to the graph with a 1,000's comma
position = position_dodge(0.9),
vjust = -0.3) +
ggtitle("Animal Intake Types") +
xlab("Animal Type") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma) +
theme(plot.title = element_text(face="bold")) +
theme_bw()
dallas_animals %>%
filter(animal_type == "DOG") %>%
count(new_breed) %>%   #count the number of animals
ggplot(aes(x = reorder(new_breed, n), y = n)) +
geom_bar(stat = "identity") +             #create a bar graph
geom_text(aes(label = comma(n)),          #add labels to the graph with a 1,000's comma
position = position_dodge(0.9),
vjust = 0.1,
hjust = -0.2) +
ggtitle("Count of Dog Breeds") +
xlab("Dog Breed") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma, limits = c(0, 6500)) +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
coord_flip()
dallas_animals %>%
filter(animal_type == "DOG") %>%
count(intake_type, new_breed) %>%
ggplot(aes(x = reorder(intake_type, n),
y = reorder(new_breed, n),
fill = n)) +
geom_tile() +
ggtitle("Dog Breed Intake Types") +
xlab("Intake Type") +
ylab("Animal Breed") +
labs(fill='Count of Dogs') +
theme_bw() +
theme(plot.title = element_text(face="bold"),
axis.text.x = element_text(angle = 45)) +
scale_fill_gradient(low = "white", high = "steelblue")
dallas_animals %>%
filter(!is.na(total_time) & (outcome_type == "ADOPTION" | outcome_type == "EUTHANIZED")) %>%
ggplot(aes(x = as.numeric(total_time), fill = outcome_type)) +
geom_histogram(bins = 20, position = "dodge") +
facet_wrap( ~ outcome_type) +
ggtitle("Histogram of Time at Shelter") +
xlab("Time at Shelter") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma) +
theme_bw() +
theme(plot.title = element_text(face="bold"))
dallas_animals %>%
filter(!is.na(outcome_date)) %>%
count(outcome_date) %>%
ggplot(aes(x = outcome_date, y = n)) +
geom_line() +
geom_smooth(method = 'loess') +
ggtitle("Outcome Time Series") +
xlab("Outcome Date") +
ylab("Number of Animals") +
theme_bw() +
theme(plot.title = element_text(face="bold"))
holidays <- read.csv("usholidays.csv", stringsAsFactors = F)
holidays <- holidays %>% select(Date, Holiday) %>% mutate(Date = ymd(Date)) %>%
inner_join(dallas_animals %>%
select(outcome_date) %>%
mutate(outcome_date = ymd(outcome_date)),
by = c("Date" = "outcome_date")) %>%
distinct()
dallas_animals %>%
filter(!is.na(outcome_date) & outcome_type == "ADOPTION") %>%
count(outcome_date) %>%
ggplot(aes(x = outcome_date, y = n)) +
geom_line() +
geom_smooth(method = 'loess') +
ggtitle("Adoptoin on Holidays") +
xlab("Outcome Date") +
ylab("Number of Animals") +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
geom_vline(aes(xintercept = as.Date(Date)), colour = "magenta1", data = holidays) +
ggrepel::geom_label_repel(aes(x = as.Date(Date), label = Holiday),
colour = "grey37", y = 150, data = holidays)
dallas_animals %>%
filter(!is.na(outcome_date) & outcome_type == "ADOPTION") %>%
count(outcome_date) %>%
ggplot(aes(x = outcome_date, y = n)) +
geom_line() +
geom_smooth(method = 'loess') +
ggtitle("Adoptoin on Holidays") +
xlab("Outcome Date") +
ylab("Number of Animals") +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
geom_vline(aes(xintercept = as.POSIXct(Date)), colour = "magenta1", data = holidays) +
ggrepel::geom_label_repel(aes(x = as.POSIXct(Date), label = Holiday),
colour = "grey37", y = 150, data = holidays)
dallas_animals %>% filter(outcome_type == "ADOPTION") %>%
ggplot(aes(x = outcome_day)) +
geom_bar() +
ggtitle("Adoption by Day") +
xlab("Day of Week") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma) +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
scale_fill_brewer(palette="Set1")
dallas_animals %>% filter(outcome_type == "ADOPTION" & !is.na(outcome_date)) %>%
ggplot(aes(x = outcome_day)) +
geom_bar() +
ggtitle("Adoption by Day") +
xlab("Day of Week") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma) +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
scale_fill_brewer(palette="Set1")
dallas_animals %>%
filter(animal_type == "DOG") %>%
count(new_breed) %>%   #count the number of animals
ggplot(aes(x = reorder(new_breed, n), y = n)) +
geom_bar(stat = "identity") +             #create a bar graph
geom_text(aes(label = comma(n)),          #add labels to the graph with a 1,000's comma
position = position_dodge(0.9),
vjust = 0.1,
hjust = -0.2) +
ggtitle("Count of Dog Breeds Taken in by Shelter") +
xlab("Dog Breed") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma, limits = c(0, 6500)) +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
coord_flip()
dallas_animals %>%
filter(animal_type == "DOG") %>%
count(new_breed) %>%   #count the number of animals
ggplot(aes(x = reorder(new_breed, n), y = n)) +
geom_bar(stat = "identity") +             #create a bar graph
geom_text(aes(label = comma(n)),          #add labels to the graph with a 1,000's comma
position = position_dodge(0.9),
vjust = 0.1,
hjust = -0.2) +
ggtitle("Count of Dog Breeds Intakes") +
xlab("Dog Breed") +
ylab("Number of Animals") +
scale_y_continuous(labels = comma, limits = c(0, 6500)) +
theme_bw() +
theme(plot.title = element_text(face="bold")) +
coord_flip()
library(shiny)
install.packages("xtable")
library(tidyverse)
library(ggplot2)
ui = fluidPage(
fluidRow(
column(5,offset = 4, titlePanel("Cocoa Bar Analysis Tool")),
column(8,offset = 3,"Chocolate is one of the most popular candies in the world. Each year, residents of the United States collectively eat more than 2.8 billions pounds. However, not all chocolate bars are created equal! This dataset contains expert ratings of over 1,700 individual chocolate bars, along with information on their regional origin, percentage of cocoa, the variety of chocolate bean used and where the beans were grown.")
),
radioButtons("plotType", "Cocoa Plot Type:",
c("Cocoa reviews by year" = "reviews",
"Frequency of cocoa percentage" = "cocoaPerc",
"Cocoa company location" = "cocoaLocation",
"Bars by bean type" = "barsBean",
"Bars by bean origin" = "barsOrigin",
"Best rated companies" = "bestCompanies",
"Cocoa percentage and rating" = "ratingPerc",
"Annual cocoa bean prices" = "beanPriceTag",
"Rating by bean origin" = "beanRating"
)),
plotOutput("plotTypeOut"),
textOutput("descOut")
)
server = function(input, output){
#Plot output
output$plotTypeOut = renderPlot(
{
#Load cocoa data and format
df =  read.csv('flavors_of_cacao.csv')
names(df)[1:9] <- c("company_maker", "bar_name","ref", "review_date", "cocoa_percentage", "company_location", "rating", "bean_type", "bean_origin")
#remove the percentage sign from cocao_percentage columns, and save as a numeric type
df$cocoa_percentage <- as.numeric(sub("%","",df$cocoa_percentage))
#change 'review_date' column to a factor datatype
df$review_date <- as.factor(df$review_date)
#deal with the missing values in 'bean_type' and 'bean_other' columns.
df[, c(8,9)] <- sapply(df[,c(8,9)], str_trim)
df[df==""] <- NA
#Bean type fix
df$bean_type[nchar(df$bean_type) == 1] <- NA
#Bean price data
beanPrice = read.csv('FAOSTAT_data_11-18-2018.csv')
#Rename Columns & formatting
names(beanPrice)[1:3] = c('bean_origin','price_year','price')
beanPrice$price_year = as.factor(beanPrice$price_year)
#Select appropriate plot
finalPlot = switch(input$plotType,
reviews = df %>%
group_by(review_date) %>%
summarise(Count = n()) %>%
ggplot(aes(x=review_date, y = Count)) +  geom_bar(stat = "identity", fill='gold2') +labs(x="Review by Calendar Year", y="Count",title="Review Counts by Year"),
cocoaPerc = ggplot(data = df, aes(x=cocoa_percentage))+geom_histogram(bins = 60,fill='darkred')+labs(x="Cocoa Percentage", y="Frequency",title="Frequency of Cocoa Percetnage")+scale_x_continuous(breaks = seq(40, 100, by = 5)),
cocoaLocation =df %>%
group_by(company_location) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ggplot(aes(x = reorder(company_location, -Count), y=Count)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(x="Company Location", y = "Count of Cocoa"),
barsBean = df %>%
group_by(bean_type) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
na.omit(bean_type) %>%
top_n(10) %>%
ggplot(aes(x = reorder(bean_type, -Count), y=Count)) + geom_bar(stat = "identity", fill='gold2')+labs(x = "Bean Type", y = "Count", title = "Counting Bars by Bean Type" )+ theme(axis.text.x = element_text(angle = 90, hjust = 1)) ,
barsOrigin = df %>%
group_by(bean_origin) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
na.omit(bean_origin) %>%
top_n(10) %>%
ggplot(aes(x = reorder(bean_origin, -Count), y=Count)) + geom_bar(stat = "identity", fill='darkred')+labs(x = "Bean Origin", y = "Count", title = "Counting Bars by Bean Origin" )+ theme(axis.text.x = element_text(angle = 90, hjust = 1)),
bestCompanies = df %>%
group_by(company_maker) %>%
filter(n()>18) %>%
mutate(count=n()) %>%
ggplot()+geom_boxplot(aes(x=company_maker,y=rating))+ theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(x="Cocoa Company",y="Rating"),
ratingPerc = df %>%
ggplot(aes(x = cocoa_percentage, y = rating)) +
geom_jitter(alpha = .75) +
coord_cartesian(ylim = c(0,5)) +
labs(x = 'Cocoa percentage', y = 'Rating', title='Relationship between Cocoa Percentage and Rating'),
beanPriceTag = ggplot(beanPrice,aes(price_year,price,fill = bean_origin)) +geom_histogram(stat="identity") + guides(fill=guide_legend(title="Bean Origin"))+ theme(legend.position = "bottom",legend.text = element_text(size = 7)) + labs(title = "Annual Cocoa Bean Prices", x = "Year", y = "Cocoa Price"),
beanRating = df %>%
group_by(bean_origin) %>%
filter(n()>100) %>%
mutate(count=n()) %>%
ggplot()+geom_boxplot(aes(x=bean_origin,y=rating))+ theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(x="Bean Origin",y="Rating")
)
#Plot the data
finalPlot
}
)
#Show description for each plot
output$descOut = renderText({
descrOutput = switch(input$plotType,
reviews ="The chart above details the count of reviews (y-axis) sliced by the year it was published (x-axis). The two columns used for its creation are 'review_date' and 'rating' There is a clear trend of review counts increasing over time with 2015 as the peak. It appears that the dataset contains only the first few months of 2017. This could prove to be a very useful dimension to layer onto other variables to understand how relationships have changed over time." ,
cocoaPerc ="This plot shows the distribution of the variable cocoa percentage. It is clear that the majority of the bars are between 70% and 75%, with 70% being the most common. There are enough unique values that we will be able to do meaningful analytics using this variable.",
cocoaLocation = "The pareto bar chart confirms that the majority of chocolate bars are produced by companies located in only a few countries, with 3 of the top 10 outside of Europe: USA, Canada and Australia. This plot was enabled by applying a subset to the dataframe that allowed us to view by country name the top 10 producers.
We see that chocolate bar production companies located in the USA have produced almost half of the bars in the data set.
",
barsBean ="The bar chart shows the number of chocolate bars by bean type. There are 40 different type of beans, but this chart shows only ten bean types that are most used in making the chocolate bars. The bean  - Trinitario is used in more than 400 bars. The next most used ones are Criollo and Forastero. There are 887 records with no bean type and these records are excluded from this chart.
After we look at this, we may want to look at which bean type gives the best chocolate bar based on the rating.",
barsOrigin ="The bar chart shows the number of chocolate bars by bean origin. Beans used in the bars originated from different parts of the world, there are 101 different origins in the dataset. After grouping the data by bean origin, we have taken top 10 places to look at which places produce the most chocolate bars. Most chocolate bars are made from the cacao originated in Venezuela and some other South American countries. There are some records with blank/null values of bean origin which were removed for this chart
After this, we may want to look at which place produces the best chocolate bar based on the rating." ,
bestCompanies = "The boxplot above shows only two companies with statistically significant different ratings from the others in the dataset:
Soma appears to have achieved a rating slightly better than its peers, while Hotel Chocolat (Coppenour) appears to have achieved a rating slightly worse than the other companies in the peer group. It should be noted, however that there were more than twice as many ratings provided for Soma (48) than Hotel Chocolat-Coppenour (20), and additionally that Soma had two ratings that appear to be below the mean of the ratings for the entire population. Arete's and Domori's ratings appear to be consistently above the mean, which would rate them as \"close seconds\" to Soma.
",
ratingPerc = "The chart above details the rating for each bar (y-axis) by the cocoa percentage of the associated bar (x-axis).  The two columns ares for its creation are 'rating' and 'cocoa_percentage'.   There are several observations that can be drawn from the scatterplot.
1.) The majority of bar's are rated between 2-4.  It is exceedingly rare for a chocolate bar to exceed a rating of 4, and NO chocolate bar received a rating lower than 0.9
2.) Within this dataset the 'cocoa percentage' of bars range between 42% and 100%
3.) Based off a visual examination, there appears to be little relationship between the two variables.",
beanPriceTag = "The theory is to test whether producer prices of cocoa beans in the bean origin countries have a statistical relationship with the overall rating.  Annual cocoa bean data was acquired from the Food and Ag Organization of the United Nations(http://www.fao.org/faostat/en/#data/PP).
It appears that from 2006-2017 Bolivia has the highest annual cocoa bean prices.  After 2014 prices seem to dip down and are on a continuing downward trend.  The next steps will be to merge this data with the existing cocoa data set.  Before that, the bean price bean origin values will need to be modified to match the bean_origin values in the cocoa data set.  Once the data is merged, we will plot to see if there is a relationship with bean prices by country and the overall cocoa rating. ",
beanRating = "This plot shows the relationship between bean origin and overall rating for the top 5 most common origins. As you can see, the average rating for each origin is almost the same. Madagascar and Dominican Republic have tighter distributions, indicating a more consistent rating, but there is no origin that has a significantly higher rating than the others."
)
#Show the text
descrOutput
}
)
}
shinyApp(ui,server)
#Team 5
#Checkpoint 3
library(shiny)
library(tidyverse)
library(ggplot2)
ui = fluidPage(
fluidRow(
column(5,offset = 4, titlePanel("Cocoa Bar Analysis Tool")),
column(8,offset = 3,"Chocolate is one of the most popular candies in the world. Each year, residents of the United States collectively eat more than 2.8 billions pounds. However, not all chocolate bars are created equal! This dataset contains expert ratings of over 1,700 individual chocolate bars, along with information on their regional origin, percentage of cocoa, the variety of chocolate bean used and where the beans were grown.")
),
radioButtons("plotType", "Cocoa Plot Type:",
c("Cocoa reviews by year" = "reviews",
"Frequency of cocoa percentage" = "cocoaPerc",
"Cocoa company location" = "cocoaLocation",
"Bars by bean type" = "barsBean",
"Bars by bean origin" = "barsOrigin",
"Best rated companies" = "bestCompanies",
"Cocoa percentage and rating" = "ratingPerc",
"Annual cocoa bean prices" = "beanPriceTag",
"Rating by bean origin" = "beanRating"
)),
plotOutput("plotTypeOut"),
textOutput("descOut")
)
server = function(input, output){
#Plot output
output$plotTypeOut = renderPlot(
{
#Load cocoa data and format
df =  read.csv('flavors_of_cacao.csv')
names(df)[1:9] <- c("company_maker", "bar_name","ref", "review_date", "cocoa_percentage", "company_location", "rating", "bean_type", "bean_origin")
#remove the percentage sign from cocao_percentage columns, and save as a numeric type
df$cocoa_percentage <- as.numeric(sub("%","",df$cocoa_percentage))
#change 'review_date' column to a factor datatype
df$review_date <- as.factor(df$review_date)
#deal with the missing values in 'bean_type' and 'bean_other' columns.
df[, c(8,9)] <- sapply(df[,c(8,9)], str_trim)
df[df==""] <- NA
#Bean type fix
df$bean_type[nchar(df$bean_type) == 1] <- NA
#Bean price data
beanPrice = read.csv('FAOSTAT_data_11-18-2018.csv')
#Rename Columns & formatting
names(beanPrice)[1:3] = c('bean_origin','price_year','price')
beanPrice$price_year = as.factor(beanPrice$price_year)
#Select appropriate plot
finalPlot = switch(input$plotType,
reviews = df %>%
group_by(review_date) %>%
summarise(Count = n()) %>%
ggplot(aes(x=review_date, y = Count)) +  geom_bar(stat = "identity", fill='gold2') +labs(x="Review by Calendar Year", y="Count",title="Review Counts by Year"),
cocoaPerc = ggplot(data = df, aes(x=cocoa_percentage))+geom_histogram(bins = 60,fill='darkred')+labs(x="Cocoa Percentage", y="Frequency",title="Frequency of Cocoa Percetnage")+scale_x_continuous(breaks = seq(40, 100, by = 5)),
cocoaLocation =df %>%
group_by(company_location) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
ggplot(aes(x = reorder(company_location, -Count), y=Count)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(x="Company Location", y = "Count of Cocoa"),
barsBean = df %>%
group_by(bean_type) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
na.omit(bean_type) %>%
top_n(10) %>%
ggplot(aes(x = reorder(bean_type, -Count), y=Count)) + geom_bar(stat = "identity", fill='gold2')+labs(x = "Bean Type", y = "Count", title = "Counting Bars by Bean Type" )+ theme(axis.text.x = element_text(angle = 90, hjust = 1)) ,
barsOrigin = df %>%
group_by(bean_origin) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
na.omit(bean_origin) %>%
top_n(10) %>%
ggplot(aes(x = reorder(bean_origin, -Count), y=Count)) + geom_bar(stat = "identity", fill='darkred')+labs(x = "Bean Origin", y = "Count", title = "Counting Bars by Bean Origin" )+ theme(axis.text.x = element_text(angle = 90, hjust = 1)),
bestCompanies = df %>%
group_by(company_maker) %>%
filter(n()>18) %>%
mutate(count=n()) %>%
ggplot()+geom_boxplot(aes(x=company_maker,y=rating))+ theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(x="Cocoa Company",y="Rating"),
ratingPerc = df %>%
ggplot(aes(x = cocoa_percentage, y = rating)) +
geom_jitter(alpha = .75) +
coord_cartesian(ylim = c(0,5)) +
labs(x = 'Cocoa percentage', y = 'Rating', title='Relationship between Cocoa Percentage and Rating'),
beanPriceTag = ggplot(beanPrice,aes(price_year,price,fill = bean_origin)) +geom_histogram(stat="identity") + guides(fill=guide_legend(title="Bean Origin"))+ theme(legend.position = "bottom",legend.text = element_text(size = 7)) + labs(title = "Annual Cocoa Bean Prices", x = "Year", y = "Cocoa Price"),
beanRating = df %>%
group_by(bean_origin) %>%
filter(n()>100) %>%
mutate(count=n()) %>%
ggplot()+geom_boxplot(aes(x=bean_origin,y=rating))+ theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(x="Bean Origin",y="Rating")
)
#Plot the data
finalPlot
}
)
#Show description for each plot
output$descOut = renderText({
descrOutput = switch(input$plotType,
reviews ="The chart above details the count of reviews (y-axis) sliced by the year it was published (x-axis). The two columns used for its creation are 'review_date' and 'rating' There is a clear trend of review counts increasing over time with 2015 as the peak. It appears that the dataset contains only the first few months of 2017. This could prove to be a very useful dimension to layer onto other variables to understand how relationships have changed over time." ,
cocoaPerc ="This plot shows the distribution of the variable cocoa percentage. It is clear that the majority of the bars are between 70% and 75%, with 70% being the most common. There are enough unique values that we will be able to do meaningful analytics using this variable.",
cocoaLocation = "The pareto bar chart confirms that the majority of chocolate bars are produced by companies located in only a few countries, with 3 of the top 10 outside of Europe: USA, Canada and Australia. This plot was enabled by applying a subset to the dataframe that allowed us to view by country name the top 10 producers.
We see that chocolate bar production companies located in the USA have produced almost half of the bars in the data set.
",
barsBean ="The bar chart shows the number of chocolate bars by bean type. There are 40 different type of beans, but this chart shows only ten bean types that are most used in making the chocolate bars. The bean  - Trinitario is used in more than 400 bars. The next most used ones are Criollo and Forastero. There are 887 records with no bean type and these records are excluded from this chart.
After we look at this, we may want to look at which bean type gives the best chocolate bar based on the rating.",
barsOrigin ="The bar chart shows the number of chocolate bars by bean origin. Beans used in the bars originated from different parts of the world, there are 101 different origins in the dataset. After grouping the data by bean origin, we have taken top 10 places to look at which places produce the most chocolate bars. Most chocolate bars are made from the cacao originated in Venezuela and some other South American countries. There are some records with blank/null values of bean origin which were removed for this chart
After this, we may want to look at which place produces the best chocolate bar based on the rating." ,
bestCompanies = "The boxplot above shows only two companies with statistically significant different ratings from the others in the dataset:
Soma appears to have achieved a rating slightly better than its peers, while Hotel Chocolat (Coppenour) appears to have achieved a rating slightly worse than the other companies in the peer group. It should be noted, however that there were more than twice as many ratings provided for Soma (48) than Hotel Chocolat-Coppenour (20), and additionally that Soma had two ratings that appear to be below the mean of the ratings for the entire population. Arete's and Domori's ratings appear to be consistently above the mean, which would rate them as \"close seconds\" to Soma.
",
ratingPerc = "The chart above details the rating for each bar (y-axis) by the cocoa percentage of the associated bar (x-axis).  The two columns ares for its creation are 'rating' and 'cocoa_percentage'.   There are several observations that can be drawn from the scatterplot.
1.) The majority of bar's are rated between 2-4.  It is exceedingly rare for a chocolate bar to exceed a rating of 4, and NO chocolate bar received a rating lower than 0.9
2.) Within this dataset the 'cocoa percentage' of bars range between 42% and 100%
3.) Based off a visual examination, there appears to be little relationship between the two variables.",
beanPriceTag = "The theory is to test whether producer prices of cocoa beans in the bean origin countries have a statistical relationship with the overall rating.  Annual cocoa bean data was acquired from the Food and Ag Organization of the United Nations(http://www.fao.org/faostat/en/#data/PP).
It appears that from 2006-2017 Bolivia has the highest annual cocoa bean prices.  After 2014 prices seem to dip down and are on a continuing downward trend.  The next steps will be to merge this data with the existing cocoa data set.  Before that, the bean price bean origin values will need to be modified to match the bean_origin values in the cocoa data set.  Once the data is merged, we will plot to see if there is a relationship with bean prices by country and the overall cocoa rating. ",
beanRating = "This plot shows the relationship between bean origin and overall rating for the top 5 most common origins. As you can see, the average rating for each origin is almost the same. Madagascar and Dominican Republic have tighter distributions, indicating a more consistent rating, but there is no origin that has a significantly higher rating than the others."
)
#Show the text
descrOutput
}
)
}
shinyApp(ui,server)
