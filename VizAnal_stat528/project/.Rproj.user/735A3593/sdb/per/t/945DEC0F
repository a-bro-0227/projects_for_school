{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Stat258 Group1 Presentation - Dallas Animal Shelter\"\nauthor: 'Group 1: Alex Brown, Megan Schmitt, Sarah Diercks, Jamie Helm'\ndate: \"December 3, 2018\"\noutput: ioslides_presentation\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = FALSE)\n```\n\n## Project Description\n\nFor our group assignment, we have chose to look at a data set from an Animal Shelter in Dallas, TX. Animal shelters help animals find new homes and maintain a safe city. We believe this data set can be used to help this shelter save money and operate more efficiently. In addition, this data set can be used in various ways such as marketing, keeping appropriate inventory of pet supplies on hand, and staffing necessary resources at certain times.\n\nThe Dallas Animal Shelter data set can be found on the [TidyTuesday](https://github.com/rfordatascience/tidytuesday) project website at the following link: [week18_dallas_animals.xlsx](https://github.com/rfordatascience/tidytuesday/blob/master/data/2018-07-31/week18_dallas_animals.xlsx)\n\n## Outline\n\nThis presentation is meant for discussion topics. Anlayis of the graphs will be brief. Further analysis can be found in the report to come.\n\n* Packages Used in Analysis\n* Brief Description of the Dallas Animal Shelter Data\n* Description on Manipulations to Data\n* Dimensions of Data\n* Intake Analysis\n* Time at Shelter Analysis\n* Outcome Analysis\n\n## Packages Used\n\n* `readxl` - to read in excel files.\n* `scales` - for adjusting graphics legends and axes.\n* `lubridate` - fast and user friendly way to work with dates.\n* `rvest` - for scraping information off of the web.\n* `RColorBrewer` - for changing graph colors\n* `tidyverse` - a collection of packages to manipulate and graph data.\n\n```{r library bank, echo=FALSE}\n#====library bank====\nlibrary(readxl)\nlibrary(scales, warn.conflicts = F)\nlibrary(lubridate,warn.conflicts = F)\nlibrary(rvest, warn.conflicts = F, quietly = T)\nlibrary(RColorBrewer)\nsuppressPackageStartupMessages(library(tidyverse,\n                                       warn.conflicts = F))\n```\n\n## The Data\n\nEach data point represents a different animal that entered the shelter identified by an `andimal_id`. Each observation contains what the `intake_type` was and what the `outcome_type` was and dates of these events. In addition, there is information about the type and breed of the animal and what condition the animal was in at the time of intake and at the time of the outcome.\n\n```{r read in file, echo=FALSE}\no_dallas_animals <- read_excel(\"week18_dallas_animals.xlsx\", sheet = \"raw\", na = \"NA\")\n```\n\n## Data Manipulations\n\n* Added `intake_day` and `outcome_day` which represents the day of the week when the intake or outcome happened, respectively\n* Added `total_time` which represents the number or days of the animal was at the shelter.\n* Lumped the 20% least common types of dog breeds brought into the Dallas Animal Shelter as `OTHER`.\n\n```{r manipulations, echo=FALSE}\ndallas_animals <- o_dallas_animals %>%\n  select(-c(kennel_status, tag_type, activity_number, activity_sequence, source_id,\n            census_tract, receipt_number, impound_number, service_request_number,\n            chip_status, year)) %>%\n  rename(year = mo_year) %>%\n  mutate(intake_day = wday(intake_date, label = TRUE),\n         outcome_day = wday(outcome_date, label = TRUE),\n         total_time = difftime(outcome_date, intake_date, units = \"days\"))\n\ndog_breed <- dallas_animals %>%\n  filter(animal_type == \"DOG\") %>%\n  count(animal_breed) %>%\n  rename(count_dogs = n) %>%\n  arrange(desc(count_dogs)) %>%\n  mutate(percent_dogs = round(count_dogs/sum(count_dogs), 2),\n         cum_percent = cumsum(percent_dogs),\n         new_breed = ifelse(cum_percent > 0.8, \"OTHER\", animal_breed))\n\ndallas_animals <- dallas_animals %>%\n  left_join(dog_breed %>%\n              select(animal_breed, new_breed),\n            by = \"animal_breed\")\n```\n\n## Data Dimensions\n\n```{r columns used, echo=FALSE}\ndata.frame(numb_rows = nrow(dallas_animals), numb_col = ncol(dallas_animals))\ncolnames(dallas_animals)\n```\n\n## Intake Analysis | Time Series\n\n```{r time series intake, echo=FALSE}\ndallas_animals %>%\n  count(intake_date) %>%\n  ggplot(aes(x = intake_date, y = n)) +\n  geom_line() +\n  geom_smooth(method = 'loess') +\n  ggtitle(\"Intake Time Series\") +\n  xlab(\"Intake Date\") +\n  ylab(\"Number of Animals\") +\n  theme_bw() +\n  theme(plot.title = element_text(face=\"bold\"))\n```\n\n## Intake Analysis | Time Series (cont'd)\n\nFrom this graph we can see we have one years worth data from the Dallas Animal Shelter. We see that the smoothing line dips in the winter months and then spikes in the spring and summer months. However, one years worth of data is not really sufficient for identifying seasonality.\n\n## Intake Analysis | Intake Types\n\n```{r intake types, echo=FALSE}\ndallas_animals %>% count(intake_type) %>%   #count the number of animals\n  ggplot(aes(x = reorder(intake_type, n), y = n)) +\n  geom_bar(stat = \"identity\") +             #create a bar graph\n  geom_text(aes(label = comma(n)),          #add labels to the graph with a 1,000's comma\n            position = position_dodge(0.9),\n            vjust = 0.1,\n            hjust = -0.2) +\n  ggtitle(\"Intake Types\") +\n  xlab(\"Intake Type\") +\n  ylab(\"Number of Animals\") +\n  scale_y_continuous(labels = comma, limits = c(0, 25000)) +\n  theme(plot.title = element_text(face=\"bold\")) +\n  theme_bw() +\n  coord_flip()\n```\n\n## Intake Analysis | Top Intakes Types by Day\n\n```{r top intake by day, echo=FALSE}\ndallas_animals %>% filter(intake_type == \"STRAY\" | intake_type == \"OWNER SURRENDER\") %>%\n  ggplot(aes(x = intake_day, fill = intake_type)) +\n  geom_bar() +\n  facet_wrap( ~ intake_type) +\n  ggtitle(\"Intake Type by Day\") +\n  xlab(\"Intake Day\") +\n  ylab(\"Number of Animals\") +\n  labs(fill = \"Day of Week\") +\n  scale_y_continuous(labels = comma) +\n  theme_bw() +\n  theme(plot.title = element_text(face=\"bold\")) +\n  scale_fill_brewer(palette=\"Set1\")\n```\n\n## Intake Analysis | Animal Types\n\n```{r animal types intake, echo=FALSE}\ndallas_animals %>% count(animal_type) %>%   #count the number of animals\n  ggplot(aes(x = animal_type, y = n)) +\n  geom_bar(stat = \"identity\") +             #create a bar graph\n  geom_text(aes(label = comma(n)),          #add labels to the graph with a 1,000's comma\n            position = position_dodge(0.9),\n            vjust = -0.3) +\n  ggtitle(\"Animal Intake Types\") +\n  xlab(\"Animal Type\") +\n  ylab(\"Number of Animals\") +\n  scale_y_continuous(labels = comma) +\n  theme(plot.title = element_text(face=\"bold\")) +\n  theme_bw()\n```\n\n## Intake Analysis | Dogs\nAs expected, there are way more dogs than anything else. Because of the large percentage of dogs compared to every other animal type, it will be worth taking a closer look at dogs specifically.\nAs mentioned before, because there are so many dog breed types, we lumped the 20% least common types of dog breeds brought into the Dallas Animal Shelter as `OTHER`.\n\n## Intake Analysis | Dog Breeds\n\n```{r dog breed types, echo=FALSE}\ndallas_animals %>%\n  filter(animal_type == \"DOG\") %>%\n  count(new_breed) %>%   #count the number of animals\n  ggplot(aes(x = reorder(new_breed, n), y = n)) +\n  geom_bar(stat = \"identity\") +             #create a bar graph\n  geom_text(aes(label = comma(n)),          #add labels to the graph with a 1,000's comma\n            position = position_dodge(0.9),\n            vjust = 0.1,\n            hjust = -0.2) +\n  ggtitle(\"Count of Dog Breeds Intakes\") +\n  xlab(\"Dog Breed\") +\n  ylab(\"Number of Animals\") +\n  scale_y_continuous(labels = comma, limits = c(0, 6500)) +\n  theme_bw() +\n  theme(plot.title = element_text(face=\"bold\")) +\n  coord_flip()\n```\n\n## Intake Analysis | Dog Breed Intake Type\n\n```{r dog breed intake, echo=FALSE}\ndallas_animals %>%\n  filter(animal_type == \"DOG\") %>%\n  count(intake_type, new_breed) %>%\n  ggplot(aes(x = reorder(intake_type, n),\n             y = reorder(new_breed, n),\n             fill = n)) +\n  geom_tile() +\n  ggtitle(\"Dog Breed by Intake Types\") +\n  xlab(\"Intake Type\") +\n  ylab(\"Dog Breed\") +\n  labs(fill='Count of Dogs') +\n  theme_bw() +\n  theme(plot.title = element_text(face=\"bold\"),\n        axis.text.x = element_text(angle = 45)) +\n  scale_fill_gradient(low = \"white\", high = \"steelblue\")\n```\n\n## Time at Dallas Animal Shelter\n\nThe average amount of time an animal spends at the Dallas Animal Shelter = `r round(mean(dallas_animals$total_time, na.rm = T), 2)` Days\n\n\n```{r time at shelter, echo=FALSE}\ndallas_animals %>%\n  filter(!is.na(total_time) & (outcome_type == \"ADOPTION\" | outcome_type == \"EUTHANIZED\")) %>%\n  ggplot(aes(x = as.numeric(total_time), fill = outcome_type)) +\n  geom_histogram(bins = 20, position = \"dodge\") +\n  facet_wrap( ~ outcome_type) +\n  ggtitle(\"Histogram of Time at Shelter by Top Outcomes\") +\n  xlab(\"Time at Shelter\") +\n  ylab(\"Number of Animals\") +\n  scale_y_continuous(labels = comma) +\n  theme_bw() +\n  theme(plot.title = element_text(face=\"bold\"))\n```\n\n\n## Outcome Analysis | Time Series\n\n```{r time series outcome, echo=FALSE}\ndallas_animals %>%\n  filter(!is.na(outcome_date)) %>%\n  count(outcome_date) %>%\n  ggplot(aes(x = outcome_date, y = n)) +\n  geom_line() +\n  geom_smooth(method = 'loess') +\n  ggtitle(\"Outcome Time Series\") +\n  xlab(\"Outcome Date\") +\n  ylab(\"Number of Animals\") +\n  theme_bw() +\n  theme(plot.title = element_text(face=\"bold\"))\n```\n\n## Outcome Analysis | Dog Breed Outcome Type\n\n```{r dog breed outcomes, echo=FALSE}\ndallas_animals %>%\n  filter(animal_type == \"DOG\") %>%\n  count(outcome_type, new_breed) %>%\n  ggplot(aes(x = reorder(outcome_type, n),\n             y = reorder(new_breed, n),\n             fill = n)) +\n  geom_tile() +\n  ggtitle(\"Dog Breed Outcomes Types\") +\n  xlab(\"Outcome Type\") +\n  ylab(\"Dog Breed\") +\n  labs(fill='Count of Dogs') +\n  theme_bw() +\n  theme(plot.title = element_text(face=\"bold\"),\n        axis.text.x = element_text(angle = 45)) +\n  scale_fill_gradient(low = \"white\", high = \"steelblue\")\n```\n\n## Outcome Analysis | Dog Breed Adoption Week Days\n\n```{r dog breed adopted, echo=FALSE}\ndallas_animals %>%\n  filter(animal_type == \"DOG\" & outcome_type == \"ADOPTION\" & !is.na(outcome_day)) %>%\n  count(outcome_day, new_breed) %>%\n  ggplot(aes(x = outcome_day,\n             y = reorder(new_breed, n),\n             fill = n)) +\n  geom_tile() +\n  ggtitle(\"Days Dog Breeds Adopted\") +\n  xlab(\"Week Day\") +\n  ylab(\"Dog Breed\") +\n  labs(fill='Count of Dogs') +\n  theme_bw() +\n  theme(plot.title = element_text(face=\"bold\"),\n        axis.text.x = element_text(angle = 45)) +\n  scale_fill_gradient(low = \"white\", high = \"steelblue\")\n```\n\n## Outcome Analysis | Adoptions by Day\n\n```{r adoption by day, echo=FALSE}\ndallas_animals %>% filter(outcome_type == \"ADOPTION\" & !is.na(outcome_date)) %>%\n  ggplot(aes(x = outcome_day)) +\n  geom_bar() +\n  ggtitle(\"Adoption by Day\") +\n  xlab(\"Day of Week\") +\n  ylab(\"Number of Animals\") +\n  scale_y_continuous(labels = comma) +\n  theme_bw() +\n  theme(plot.title = element_text(face=\"bold\")) +\n  scale_fill_brewer(palette=\"Set1\")\n```\n\n## Outcome Analysis | Holidays\n\nHere we will read in a federal holiday data set from [Kaggle](https://www.kaggle.com/gsnehaa21/federal-holidays-usa-19662020) to see if adoptions spike around holidays\n\n```{r holdays, echo=FALSE}\nholidays <- read.csv(\"usholidays.csv\", stringsAsFactors = F)\nholidays <- holidays %>% select(Date, Holiday) %>% mutate(Date = ymd(Date)) %>%\n  inner_join(dallas_animals %>%\n               select(outcome_date) %>%\n               mutate(outcome_date = ymd(outcome_date)),\n              by = c(\"Date\" = \"outcome_date\")) %>%\n  distinct()\n```\n\n## Outcome Analysis | Holidays Time Series\n\n```{r time series holiday, echo=FALSE}\ndallas_animals %>%\n  filter(!is.na(outcome_date) & outcome_type == \"ADOPTION\") %>%\n  count(outcome_date) %>%\n  ggplot(aes(x = outcome_date, y = n)) +\n  geom_line() +\n  geom_smooth(method = 'loess') +\n  ggtitle(\"Adoptoin on Holidays\") +\n  xlab(\"Outcome Date\") +\n  ylab(\"Number of Animals\") +\n  theme_bw() +\n  theme(plot.title = element_text(face=\"bold\")) +\n  geom_vline(aes(xintercept = as.POSIXct(Date)), colour = \"magenta1\", data = holidays) +\n  ggrepel::geom_label_repel(aes(x = as.POSIXct(Date), label = Holiday),\n                            colour = \"grey37\", y = 150, data = holidays)\n```",
    "created" : 1543885473645.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "390317329",
    "id" : "945DEC0F",
    "lastKnownWriteTime" : 1544585029,
    "last_content_update" : 1544585029711,
    "path" : "~/GitHub/projects_for_school/VizAnal_stat528/project/Stat258_Group1_Presentation.Rmd",
    "project_path" : "Stat258_Group1_Presentation.Rmd",
    "properties" : {
        "ignored_words" : "ioslides\n",
        "last_setup_crc32" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}