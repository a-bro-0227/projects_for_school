library(ggplot2)
hdata <- happy
hdata %>% filter(!is.na(happy)) %>%
ggplot(aes(x = factor(year), fill = happy)) + geom_bar(position = 'fill')
hdata %>% filter(!is.na(happy)) %>%
group_by(year, sex) %>%
summarise(perchappy = sum(happy == "NOT TOO HAPPY")/n()*100,
n = n()) %>%
ggplot(aes(x = year, y = perchappy, colour = sex)) + geom_point() + geom_smooth()
hdata %>% filter(!is.na(happy)) %>%
ggplot(aes(x = factor(year), fill = happy)) + geom_bar(position = 'fill')
hdata %>% filter(!is.na(happy), happy != "DK", happy != "IAP") %>%
group_by(year, sex) %>%
mutate(total = n()) %>%
group_by(year, sex, happy) %>%
summarise(perc = n()/mean(total)*100) %>%
ggplot(aes(x = year, y = perc, colour = happy, shape = sex)) + geom_point() + geom_smooth(aes(group = happy))
#######
#how is happiness affected by ...
# gender
# age
# money
hdata %>% filter(!is.na(happy), happy != "DK", happy != "IAP") %>%
ggplot(aes(x = age, fill = happy)) + geom_bar(position = "fill") +
facet_grid(sex ~ .)
hdata %>% filter(!is.na(happy), happy != "DK", happy != "IAP") %>%
ggplot(aes(x = finrela, fill = happy)) + geom_bar(position = "fill") +
coord_flip()
read.csv("fbi-crimes.csv")
rm(list = ls())
flu.us <-read.table("https://www.google.org/flutrends/about/data/flu/us/data.txt",
sep = ",", header = TRUE, skip = 11)
library(lubridate, warn.conflicts = F)
library(dplyr, warn.conflicts = F)
library(tidyr, warn.conflicts = F)
library(ggplot2, warn.conflicts = F)
library(scales)
flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)) %>% distinct(DaysOfWeekCheck)
#can also set this function to see if everything is equal to "Sunday"
flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)) %>% distinct(DaysOfWeekCheck) == "Sunday"
flu.states <- flu.us %>%
select(Date, gsub(" ", ".", state.name), District.of.Columbia) %>% #select only the state level information #remove the column `United.States`
gather(key = State, value = Value, -Date)                          #reshape the dataset
flu.states <- flu.states %>%
mutate(Date = as_datetime(Date),
Year = year(Date),
Month = month(Date, label = T, abbr = F))
str(flu.states)
year.month <- flu.states %>%
mutate(Year.Month = floor_date(Date, "month")) %>%
group_by(Year.Month, State) %>%
summarise(Total.Value = sum(Value, na.rm = T))
class(year.month$Year.Month)
year.month %>% filter(State == "Iowa") %>%
ggplot(aes(x = as.Date(Year.Month), y = Total.Value)) +
geom_line() +
scale_x_date(date_breaks = "48 weeks", date_minor_breaks = "12 weeks", date_labels = "%B %d, %Y") +
scale_y_continuous(labels = comma) +
ggtitle("Flu Cases in Iowa Over Time") +
xlab("Year-Month") + ylab("Total Cases") +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
theme(axis.text.x = element_text(angle = 90))
states <- map_data("state")
rm(states)
mutate(State = tolower(gsub(".", " ", State))) %>%
left_join(y = map_data("state"),
by = c("State" = "region"))
map.states <- flu.states %>%
filter(Year == 2014) %>%
mutate(State = tolower(gsub(".", " ", State))) %>%
left_join(y = map_data("state"),
by = c("State" = "region"))
View(map.states)
gsub(".", " ", flu.states$State)
map.states <- flu.states %>%
filter(Year == 2014) %>%
mutate(State = tolower(gsub("\\.", " ", State))) %>%
left_join(y = map_data("state"),
by = c("State" = "region"))
View(map.states)
map.states <- flu.states %>%
filter(Year == 2014) %>%
mutate(State = tolower(gsub("\\.", " ", State))) %>%
left_join(y = map_data("state"),
by = c("State" = "region")) %>%
distinct()
View(map.states)
states <- map_data("states")
states <- map_data("state")
View(states)
View(flu.states)
map.states <- flu.states %>%
filter(Year == 2014) %>%
mutate(State = tolower(gsub("\\.", " ", State))) %>%
group_by(State) %>% summarise(Flu.Cases = sum(Value, na.rm = T))
View(map.states)
levels(as.factor(states$region))
levels(as.factor(map.states$State))
map.states <- flu.states %>%
filter(Year == 2014 & State == "Alaska") %>%
mutate(State = tolower(gsub("\\.", " ", State))) %>%
group_by(State) %>% summarise(Flu.Cases = sum(Value, na.rm = T))
map.states <- flu.states %>%
filter(Year == 2014 & State != "Alaska") %>%
mutate(State = tolower(gsub("\\.", " ", State))) %>%
group_by(State) %>% summarise(Flu.Cases = sum(Value, na.rm = T))
levels(as.factor(states$region))
levels(as.factor(map.states$State))
state.data <- map_data("state")
rm(states)
map.states <- state.data %>% rename(State = region)
View(map.states)
map.states <- state.data %>% rename(State = region) %>%
left_join(flu.states %>%
filter(Year == 2014 & State != "Alaska") %>%
mutate(State = tolower(gsub("\\.", " ", State))) %>%
group_by(State) %>%
summarise(Flu.Cases = sum(Value, na.rm = T)),
by = "State")
View(map.states)
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = State,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map()
length(map.states$State)
length(unique(map.states$State))
```{r plot flu.cases, echo=TRUE}
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map()
flu.cases.2014 <- flu.states %>%
filter(Year == 2014 & State != "Alaska") %>%
mutate(State = tolower(gsub("\\.", " ", State))) %>%
group_by(State) %>%
summarise(Flu.Cases = sum(Value, na.rm = T)
map.states <- state.data %>% rename(State = region) %>%
flu.cases.2014 <- flu.states %>%
filter(Year == 2014 & State != "Alaska") %>%
mutate(State = tolower(gsub("\\.", " ", State))) %>%
group_by(State) %>%
summarise(Flu.Cases = sum(Value, na.rm = T))
View(flu.cases.2014)
map.states <- state.data %>% rename(State = region) %>%
left_join(flu.cases.2014,
by = "State")
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map()
flu.us <-read.table("https://www.google.org/flutrends/about/data/flu/us/data.txt",
sep = ",", header = TRUE, skip = 11)
library(lubridate, warn.conflicts = F)
library(dplyr, warn.conflicts = F)
library(tidyr, warn.conflicts = F)
library(ggplot2, warn.conflicts = F)
library(scales)
flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)) %>% distinct(DaysOfWeekCheck)
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck)
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
unique((flu.us %>% mutate(DaysOfWeekCheck = c(wday(flu.us$Date, label = T, abbr = F), "Tuesday")))$DaysOfWeekCheck) == "Sunday"
unique((flu.us %>% mutate(DaysOfWeekCheck = rbind(wday(flu.us$Date, label = T, abbr = F), "Tuesday")))$DaysOfWeekCheck) == "Sunday"
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F), "Tuesday"))$DaysOfWeekCheck) == "Sunday"
View(flu.us)
flu.us2 <- flu.us
flu.us2[1 , 1] <- 2003-09-29
View(flu.us2)
flu.us2[1 , 1] <- ymd(2003-09-29)
flu.us2[1 , 1] <- ymd("2003-09-29")
flu.us2[1 , 1] <-"2003-09-29"
str(flu.us2)
flu.us2[1 , 1] <- as.factor("2003-09-29")
flu.us2$Date <- as.character(flu.us2)
flu.us2$Date <- ymd(flu.us2)
flu.us2$Date <- as.Date(flu.us2)
flu.us2$Date <- as.character(flu.us2$Date)
flu.us2[1 , 1] <- as.factor("2003-09-29")
flu.us2[1 , 1] <- as.character("2003-09-29")
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
unique((flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
unique((flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck)
flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)) %>% distinct(DaysOfWeekCheck)
flu.us2[1 , 1] <- as.character("2003-09-30")
flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)) %>% distinct(DaysOfWeekCheck)
wday(as.character("2003-09-30"), label = T, abbr = F)
flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us2$Date, label = T, abbr = F)) %>% distinct(DaysOfWeekCheck)
unique((flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us2$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
all.equal(unique((flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us2$Date, label = T, abbr = F)))$DaysOfWeekCheck), "Sunday")
all.equal(as.factor(unique((flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us2$Date, label = T, abbr = F)))$DaysOfWeekCheck)), as.factor("Sunday"))
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
unique((flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us2$Date, label = T, abbr = F)))$DaysOfWeekCheck) = "Sunday"
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)) %>% distinct(DaysOfWeekCheck)
flu.states <- flu.us %>%
select(Date, gsub(" ", ".", state.name), District.of.Columbia) %>% #select only the state level information #remove the column `United.States`
gather(key = State, value = Value, -Date)                          #reshape the dataset
colnames(flu.us)
state.name
flu.states <- flu.states %>%
mutate(Date = as_datetime(Date),
Year = year(Date),
Month = month(Date, label = T, abbr = F))
str(flu.states)
year.month <- flu.states %>%
mutate(Year.Month = floor_date(Date, "month")) %>%
group_by(Year.Month, State) %>%
summarise(Total.Value = sum(Value, na.rm = T))
class(year.month$Year.Month)
year.month %>% filter(State == "Iowa") %>%
ggplot(aes(x = as.Date(Year.Month), y = Total.Value)) +
geom_line() +
scale_x_date(date_breaks = "12 weeks", date_labels = "%B %d, %Y") +
scale_y_continuous(labels = comma) +
ggtitle("Flu Cases in Iowa Over Time") +
xlab("Year-Month") + ylab("Total Cases") +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_text(aes(label = State, colour = State, x = Inf, y = Capex), hjust = -.1))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_text(aes(label = Year, colour = Year), hjust = -.1) +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.8)) +
theme(axis.text.x = element_text(angle = 90))
install.packages("directlabels")
library(directlabels)
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.8)) +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 1)) +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.5)) +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Flu Cases") +
ylab("Month") +
scale_fill_discrete(name = "Year") +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
scale_fill_discrete(name = "Year") +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
scale_fill_discrete(fill = "Year") +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
theme(axis.text.x = element_text(angle = 90), legend.title = "Year", legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
theme(axis.text.x = element_text(angle = 90), legend.title = element_text("Year"), legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
scale_fill_discrete(name="Experimental\nCondition") +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
scale_fill_discrete(name="Year") +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
flu.states %>% mutate(Year = as.character(Year)) %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = Year)) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
state.data <- map_data("state")
flu.cases.2014 <- flu.states %>%
filter(Year == 2014 & State != "Alaska") %>%
mutate(State = tolower(gsub("\\.", " ", State))) %>%
group_by(State) %>%
summarise(Flu.Cases = sum(Value, na.rm = T))
map.states <- state.data %>% rename(State = region) %>%
left_join(flu.cases.2014,
by = "State")
length(unique(map.states$State))
levels(as.factor(wday(flu.us$Date, label = T, abbr = F)))
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
flu.cases.2014 <- flu.states %>%
filter(Year == 2014) %>%
mutate(State = tolower(gsub("\\.", " ", State))) %>%
group_by(State) %>%
summarise(Flu.Cases = sum(Value, na.rm = T))
map.states <- state.data %>% rename(State = region) %>%
inner_join(flu.cases.2014,
by = "State")
length(unique(map.states$State))
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map()
library(RColorBrewer)
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
scale_color_brewer(palette = "Purples") +
ggthemes::theme_map()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
scale_colour_brewer(palette = "Purples") +
ggthemes::theme_map()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
scale_colour_brewer(palette = "Purples") +
ggthemes::theme_map()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
scale_color_gradient(palette = "Purples") +
ggthemes::theme_map()
library(RColorBrewer)
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
scale_color_gradient(palette = "Purples") +
ggthemes::theme_map()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_color_gradient(palette = "Purples")
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_fill_brewer(palette = "Purples")
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_fill_brewer()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_fill_discrete()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_fill_continuous()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_fill_continuous(palette = "Purples")
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_fill_gradient2(palette = "Purples")
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map()
