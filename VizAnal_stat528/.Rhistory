flu.us2[1 , 1] <- ymd(2003-09-29)
flu.us2[1 , 1] <- ymd("2003-09-29")
flu.us2[1 , 1] <-"2003-09-29"
str(flu.us2)
flu.us2[1 , 1] <- as.factor("2003-09-29")
flu.us2$Date <- as.character(flu.us2)
flu.us2$Date <- ymd(flu.us2)
flu.us2$Date <- as.Date(flu.us2)
flu.us2$Date <- as.character(flu.us2$Date)
flu.us2[1 , 1] <- as.factor("2003-09-29")
flu.us2[1 , 1] <- as.character("2003-09-29")
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
unique((flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
unique((flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck)
flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)) %>% distinct(DaysOfWeekCheck)
flu.us2[1 , 1] <- as.character("2003-09-30")
flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)) %>% distinct(DaysOfWeekCheck)
wday(as.character("2003-09-30"), label = T, abbr = F)
flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us2$Date, label = T, abbr = F)) %>% distinct(DaysOfWeekCheck)
unique((flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us2$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
all.equal(unique((flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us2$Date, label = T, abbr = F)))$DaysOfWeekCheck), "Sunday")
all.equal(as.factor(unique((flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us2$Date, label = T, abbr = F)))$DaysOfWeekCheck)), as.factor("Sunday"))
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
unique((flu.us2 %>% mutate(DaysOfWeekCheck = wday(flu.us2$Date, label = T, abbr = F)))$DaysOfWeekCheck) = "Sunday"
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)) %>% distinct(DaysOfWeekCheck)
flu.states <- flu.us %>%
select(Date, gsub(" ", ".", state.name), District.of.Columbia) %>% #select only the state level information #remove the column `United.States`
gather(key = State, value = Value, -Date)                          #reshape the dataset
colnames(flu.us)
state.name
flu.states <- flu.states %>%
mutate(Date = as_datetime(Date),
Year = year(Date),
Month = month(Date, label = T, abbr = F))
str(flu.states)
year.month <- flu.states %>%
mutate(Year.Month = floor_date(Date, "month")) %>%
group_by(Year.Month, State) %>%
summarise(Total.Value = sum(Value, na.rm = T))
class(year.month$Year.Month)
year.month %>% filter(State == "Iowa") %>%
ggplot(aes(x = as.Date(Year.Month), y = Total.Value)) +
geom_line() +
scale_x_date(date_breaks = "12 weeks", date_labels = "%B %d, %Y") +
scale_y_continuous(labels = comma) +
ggtitle("Flu Cases in Iowa Over Time") +
xlab("Year-Month") + ylab("Total Cases") +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_text(aes(label = State, colour = State, x = Inf, y = Capex), hjust = -.1))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_text(aes(label = Year, colour = Year), hjust = -.1) +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.8)) +
theme(axis.text.x = element_text(angle = 90))
install.packages("directlabels")
library(directlabels)
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.8)) +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 1)) +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.5)) +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
theme(axis.text.x = element_text(angle = 90))
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Flu Cases") +
ylab("Month") +
scale_fill_discrete(name = "Year") +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
scale_fill_discrete(name = "Year") +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
scale_fill_discrete(fill = "Year") +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
theme(axis.text.x = element_text(angle = 90), legend.title = "Year", legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
theme(axis.text.x = element_text(angle = 90), legend.title = element_text("Year"), legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
scale_fill_discrete(name="Experimental\nCondition") +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
flu.states %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = as.character(Year))) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
scale_fill_discrete(name="Year") +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
flu.states %>% mutate(Year = as.character(Year)) %>%
group_by(Year, Month, State) %>%
summarize(Flu.Cases = sum(Value, na.rm = T)) %>%
filter(State == "Iowa") %>%
ggplot(aes(x = Month, y = Flu.Cases, group = Year, colour = Year)) +
geom_line() +
geom_dl(aes(label = Year), method = list(dl.combine("first.points", "last.points"), cex = 0.6)) +
ggtitle("Flu Cases Year-Over-Year") +
xlab("Month") +
ylab("Flu Cases") +
theme(axis.text.x = element_text(angle = 90), legend.position = "bottom")
state.data <- map_data("state")
flu.cases.2014 <- flu.states %>%
filter(Year == 2014 & State != "Alaska") %>%
mutate(State = tolower(gsub("\\.", " ", State))) %>%
group_by(State) %>%
summarise(Flu.Cases = sum(Value, na.rm = T))
map.states <- state.data %>% rename(State = region) %>%
left_join(flu.cases.2014,
by = "State")
length(unique(map.states$State))
levels(as.factor(wday(flu.us$Date, label = T, abbr = F)))
unique((flu.us %>% mutate(DaysOfWeekCheck = wday(flu.us$Date, label = T, abbr = F)))$DaysOfWeekCheck) == "Sunday"
flu.cases.2014 <- flu.states %>%
filter(Year == 2014) %>%
mutate(State = tolower(gsub("\\.", " ", State))) %>%
group_by(State) %>%
summarise(Flu.Cases = sum(Value, na.rm = T))
map.states <- state.data %>% rename(State = region) %>%
inner_join(flu.cases.2014,
by = "State")
length(unique(map.states$State))
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map()
library(RColorBrewer)
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
scale_color_brewer(palette = "Purples") +
ggthemes::theme_map()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
scale_colour_brewer(palette = "Purples") +
ggthemes::theme_map()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
scale_colour_brewer(palette = "Purples") +
ggthemes::theme_map()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
scale_color_gradient(palette = "Purples") +
ggthemes::theme_map()
library(RColorBrewer)
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
scale_color_gradient(palette = "Purples") +
ggthemes::theme_map()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_color_gradient(palette = "Purples")
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_fill_brewer(palette = "Purples")
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_fill_brewer()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_fill_discrete()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_fill_continuous()
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_fill_continuous(palette = "Purples")
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map() +
scale_fill_gradient2(palette = "Purples")
map.states %>%
ggplot(aes(x = long, y = lat)) +
geom_path(aes(group = group)) +    #for boarders
geom_polygon(aes(group = group,    #for fill
fill = Flu.Cases)) +    #what to fill
ggthemes::theme_map()
library(rvest)
library(xml2)
library(rvest)
rm(list = ls())
library(xml2)
library(rvest)
url <- "http://www.realclearpolitics.com/epolls/2016/president/us/general_election_trump_vs_clinton-5491.html"
tables <- html_table(doc)
doc <- read_html(url)
tables <- html_table(doc)
str(tables)
raw <- tables[[4]]
head(raw)
library(tidyr)
clean01 <- raw %>% separate(Date, into = c("Start_Date", "End_Date"), sep = " - ")
glimpse(polls)
library(tidyverse)
clean01 <- raw %>% separate(Date, into = c("Start_Date", "End_Date"), sep = " - ")
glimpse(polls)
clean02 <- clean01 %>%
mutate(Start_Date = ymd(paste("2016", Start_Date, sep = "/")),
End_Date = ymd(paste("2016", End_Date, sep = "/")))
library(lubridate)
clean02 <- clean01 %>%
mutate(Start_Date = ymd(paste("2016", Start_Date, sep = "/")),
End_Date = ymd(paste("2016", End_Date, sep = "/")))
clean01 <- raw %>% separate(Date, into = c("Start_Date", "End_Date"), sep = " - ")
clean02 <- clean01 %>%
mutate(Start_Date = ymd(paste("2016", Start_Date, sep = "/")),
End_Date = ymd(paste("2016", End_Date, sep = "/")))
View(clean02)
url <- "http://www.realclearpolitics.com/epolls/2016/president/us/general_election_trump_vs_clinton-5491.html"
doc <- read_html(url)
tables <- html_table(doc)
str(tables)
raw <- tables[[4]]
head(raw)
clean01 <- raw %>% separate(Date, into = c("Start_Date", "End_Date"), sep = " - ")
clean02 <- clean01 %>%
mutate(Start_Date = ymd(paste("2016", Start_Date, sep = "/")),
End_Date = ymd(paste("2016", End_Date, sep = "/")))
class(clean02$Start_Date)
polls <- clean02 %>%
separate(Sample, into = c("N", "Type")) %>%
filter(Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`)
clean02 <- clean01 %>%
mutate(Start_Date = ymd(paste("2016", Start_Date, sep = "/")),
End_Date = ymd(paste("2016", End_Date, sep = "/")))
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "right") %>%
filter(Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`)
clean02 <- clean01 %>%
mutate(Start_Date = ymd(paste("2016", Start_Date, sep = "/")),
End_Date = ymd(paste("2016", End_Date, sep = "/")))
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "right") %>%
filter(Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%
mutate(N = as.numeric(N))
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "right") %>%
filter(Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`)
View(clean02)
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "right") %>%
filter(Poll != c("Final Results", "RCP Average")) %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`)
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "right") %>%
filter(Poll != "Final Results" & Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`)
View(polls)
?separate
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "left") %>%
filter(Poll != "Final Results" & Poll != "RCP Average")
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "left") %>%
filter(Poll != "Final Results" & Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%
mutate(N = as.numeric(N))
polls %>%
ggplot(aes(x = End_Date, y = Clinton - Trump, colour = pollster))
View(polls)
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "left") %>%
filter(Poll != "Final Results" & Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%
mutate(N = as.numeric(N),
pollster = ifelse(N <= 5, "Other",
sub(paste0("^(.*?", substr(Poll, 1, 3),".*?)",
substr(Poll, 1, 3), ".*", "\\1",
Poll))))
substr(Poll, 1, 3)
substr(clean02$Poll, 1, 3)
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "left") %>%
filter(Poll != "Final Results" & Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%
mutate(N = as.numeric(N),
pollster = ifelse(N <= 5, "Other",
sub(paste0("^(.*?", substr(Poll, 1, 3),".*?)",
substr(Poll, 1, 3), ".*"),
"\\1", Poll)))
View(polls)
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "left") %>%
filter(Poll != "Final Results" & Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%
mutate(N = as.numeric(N),
pollster = ifelse(N <= 5, "Other",
sub(paste0("^(.*?", substr(clean02$Poll, 1, 3),".*?)",
substr(clean02$Poll, 1, 3), ".*"),
"\\1", clean02$Poll)))
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "left") %>%
filter(Poll != "Final Results" & Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%
mutate(N = as.numeric(N),
pollster = ifelse(N <= 5, "Other",
sub(paste0("^(.*?", substr(Poll, 1, 3),".*?)",
substr(Poll, 1, 3), ".*"),
"\\1", Poll)))
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "left") %>%
filter(Poll != "Final Results" & Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%
mutate(N = as.numeric(N),
pollster = ifelse(N <= 5, "Other",
gsub(paste0("^(.*?", substr(Poll, 1, 3),".*?)",
substr(Poll, 1, 3), ".*"),
"\\1", Poll)))
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "left") %>%
filter(Poll != "Final Results" & Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%
mutate(N = as.numeric(N),
pollster = gsub(paste0("^(.*?", substr(Poll, 1, 3),".*?)", substr(Poll, 1, 3), ".*"), "\\1", Poll))
paste0("^(.*?", substr(Poll, 1, 3),".*?)", substr(Poll, 1, 3), ".*")
paste0("^(.*?", substr(clean02$Poll, 1, 3),".*?)", substr(clean02$Poll, 1, 3), ".*")
polls <- clean02 %>%
separate(Sample, into = c("N", "Type"), fill = "left") %>%
filter(Poll != "Final Results" & Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%
mutate(N = as.numeric(N),
pollster = lapply(Poll, function(x) gsub(paste0("^(.*?", substr(x, 1, 3),".*?)", substr(x, 1, 3), ".*"), "\\1", x)))
polls <- clean02 %>%
separate(Sample, into = c("Number", "Type"), fill = "left") %>%
filter(Poll != "Final Results" & Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%
add_count(Poll) %>%
mutate(Number = as.numeric(Number),
pollster = ifelse(n <=5, "Other",
lapply(Poll, function(x) gsub(paste0("^(.*?",
substr(x, 1, 3),".*?)",
substr(x, 1, 3), ".*"),
"\\1", x))))
View(polls)
levels(as.factor(polls$pollster))
polls <- clean02 %>%
separate(Sample, into = c("Number", "Type"), fill = "left") %>%
filter(Poll != "Final Results" & Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%
add_count(Poll) %>%
mutate(Number = as.numeric(Number),
pollster = ifelse(n <=5, "Other",
sapply(Poll, function(x) gsub(paste0("^(.*?",
substr(x, 1, 3),".*?)",
substr(x, 1, 3), ".*"),
"\\1", x))))
levels(as.factor(polls$pollster))
polls <- clean02 %>%
separate(Sample, into = c("Number", "Type"), fill = "left") %>%
filter(Poll != "Final Results" & Poll != "RCP Average") %>%
rename(Clinton = `Clinton (D)`, Trump = `Trump (R)`) %>%
add_count(Poll) %>%
mutate(Number = as.numeric(Number),
pollster = ifelse(n <=5, "Other",
sapply(Poll, function(x) gsub(paste0("^(.*?",
substr(x, 1, 3),".*?)",
substr(x, 1, 3), ".*"),
"\\1", x)))) %>% select(-n)
