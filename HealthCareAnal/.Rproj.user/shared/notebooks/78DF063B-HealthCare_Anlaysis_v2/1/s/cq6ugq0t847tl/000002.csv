"0","#====reading in data===="
"0","mrs_patient <- sqlFetch(openmrs, ""mrs_patient"",                 #what table to `fetch` from the `openmrs` database we connected to"
"0","                        as.is = FALSE,"
"0","                        stringsAsFactors = FALSE,"
"0","                        na.strings = c("""", ""N/A"")) %>%"
"0","  filter(!is.na(birthdate)) %>%                                  #filter out blank entries"
"0","  select(patient_id,                                             #call out columns needed"
"0","         gender,"
"0","         birthdate,"
"0","         tribe_id = tribe,"
"0","         city_village,"
"0","         country)"
"0","mrs_obs <- sqlFetch(openmrs, ""mrs_obs"","
"0","                    as.is = F,"
"0","                    stringsAsFactors = FALSE,"
"0","                    na.strings = c("""", ""N/A"")) %>%"
"0","  select(obs_id,"
"0","         patient_id,"
"0","         encounter_id,"
"0","         concept_id,"
"0","         obs_datetime,"
"0","         value_coded,"
"0","         value_numeric,"
"0","         comments)"
"0","mrs_concept <- sqlFetch(openmrs, ""mrs_concept"","
"0","                        as.is = F,"
"0","                        stringsAsFactors = FALSE,"
"0","                        na.strings = c("""", ""N/A"")) %>%"
"0","  select(concept_id,"
"0","         concept_name,"
"0","         retired,"
"0","         short_name,"
"0","         description,"
"0","         datatype,"
"0","         concept_class,"
"0","         is_set,"
"0","         hi_absolute,"
"0","         hi_critical,"
"0","         hi_normal,"
"0","         low_absolute,"
"0","         low_critical,"
"0","         low_normal,"
"0","         units,"
"0","         precise)"
"0","mrs_encounter <- sqlFetch(openmrs, ""mrs_encounter"","
"0","                          as.is = F,"
"0","                          stringsAsFactors = FALSE,"
"0","                          na.strings = c("""", ""N/A"")) %>%"
"0","  select(encounter_id,"
"0","         encounter_type_id = encounter_type,"
"0","         patient_id,"
"0","         encounter_datetime)"
"0","mrs_encounter_type <- sqlFetch(openmrs, ""mrs_encounter_type"","
"0","                               as.is = F,"
"0","                               stringsAsFactors = FALSE,"
"0","                               na.strings = c("""", ""N/A"")) %>%"
"0","  select(encounter_type_id,"
"0","         encounter_type_name = name,"
"0","         encounter_description = description)"
"0","mrs_tribe <- sqlFetch(openmrs, ""mrs_tribe"","
"0","                      as.is = F,"
"0","                      stringsAsFactors = FALSE,"
"0","                      na.strings = c("""", ""N/A"")) %>%"
"0","  select(tribe_id, tribe_name = name)"
"0","mrs_program <- sqlFetch(openmrs, ""mrs_program"","
"0","                        as.is = F,"
"0","                        stringsAsFactors = FALSE,"
"0","                        na.strings = c("""", ""N/A"")) %>%"
"0","  select(program_id, program_name = name)"
"0","mrs_patient_program <- sqlFetch(openmrs, ""mrs_patient_program"","
"0","                                as.is = F,"
"0","                                stringsAsFactors = FALSE,"
"0","                                na.strings = c("""", ""N/A"")) %>%"
"0","  filter(voided != 1) %>%                                        #filter out voided to avoid any entry mistakes"
"0","  select(patient_program_id,"
"0","         patient_id,"
"0","         program_id,"
"0","         date_enrolled,"
"0","         date_completed,"
"0","         voided)"
